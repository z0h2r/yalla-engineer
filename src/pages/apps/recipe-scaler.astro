---
import BaseLayout from '../../layouts/BaseLayout.astro';
import RecipeScaler from '../../components/apps/RecipeScaler.jsx';
---

<BaseLayout>
  <a slot="header-left" href="/" class="mr-4 flex items-center accent-text hover:secondary-heading transition-colors group" aria-label="Back to home">
    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2 group-hover:-translate-x-2 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M15 19l-7-7 7-7" /></svg>
    <span class="text-sm font-bold">back</span>
  </a>
  <span slot="header-title">Recipe Scaler</span>
  
  <div class="relative left-1/2 right-1/2 -mx-[50vw] w-screen py-0">
    <div class="bg-gradient-to-br from-blue-50 via-purple-50 to-cyan-50 border border-gray-200 rounded-2xl lg:rounded-none shadow-2xl overflow-hidden w-full min-h-screen backdrop-blur-sm">
      <div class="max-w-6xl mx-auto py-16 px-6 sm:px-8">
        
        <header class="text-center mb-12">
          <h1 class="text-4xl sm:text-5xl font-black mb-6 primary-heading tracking-tight">Recipe Scaler üë®‚Äçüç≥</h1>
          <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Perfect your portions! Scale any recipe up or down with smart unit conversions and cooking tips.
          </p>
          <div class="flex items-center justify-center space-x-4 mt-6">
            <div class="h-1 w-8 bg-gradient-to-r from-transparent via-blue-500 to-transparent"></div>
            <span class="text-sm font-bold secondary-heading">Mini App #003</span>
            <div class="h-1 w-8 bg-gradient-to-r from-transparent via-cyan-500 to-transparent"></div>
          </div>
        </header>

        {/* The Mini App */}
        <div class="mb-16">
          <RecipeScaler client:load />
        </div>

        {/* About This App */}
        <div class="max-w-4xl mx-auto">
          <div class="bg-white/80 rounded-2xl p-8 shadow-lg border-2 border-gray-200 backdrop-blur-sm">
            <h2 class="text-2xl font-black mb-6 secondary-heading">Solving Kitchen Math üßÆ</h2>
            <div class="prose prose-lg max-w-none text-gray-700">
              <p class="mb-4">
                Ever tried to make a recipe for 6 people when it serves 4? Or scale down a big batch recipe for just yourself? The math gets annoying fast, especially with fractions.
              </p>
              <p class="mb-4">
                I built this after getting frustrated converting a cookie recipe from 24 cookies to 12. Seemed like a perfect excuse to practice <strong>state management</strong> and <strong>mathematical calculations</strong> in React.
              </p>
              
              <h3 class="text-xl font-bold mb-3 text-blue-600">Features I'm proud of:</h3>
              <ul class="space-y-2 mb-6">
                <li class="flex items-start">
                  <span class="text-blue-500 mr-2">‚Üí</span>
                  <span><strong>Smart fraction display</strong> - Shows 1/2 instead of 0.50</span>
                </li>
                <li class="flex items-start">
                  <span class="text-blue-500 mr-2">‚Üí</span>
                  <span><strong>Unit conversion suggestions</strong> - "16 tbsp" becomes "1 cup"</span>
                </li>
                <li class="flex items-start">
                  <span class="text-blue-500 mr-2">‚Üí</span>
                  <span><strong>Quick-add common ingredients</strong> - One-click flour, sugar, etc.</span>
                </li>
                <li class="flex items-start">
                  <span class="text-blue-500 mr-2">‚Üí</span>
                  <span><strong>Real cooking tips</strong> - Spices don't scale linearly!</span>
                </li>
              </ul>

              <div class="bg-orange-50 p-4 rounded-xl border border-orange-200 mb-4">
                <p class="text-orange-800 mb-2">
                  <strong>UX insight:</strong> I added visual feedback for scaling direction (üìàüìâ) because it's easy to get confused when you're quickly adjusting numbers while cooking.
                </p>
              </div>

              <div class="bg-blue-50 p-4 rounded-xl border border-blue-200">
                <p class="text-blue-800 mb-0">
                  <strong>Next iteration:</strong> Save/load recipes, handle more complex conversions (metric/imperial), and maybe add a timer integration for scaled cooking times!
                </p>
              </div>
            </div>
          </div>
        </div>

      </div>
      
      <footer class="border-t-2 border-gray-200 bg-gradient-to-r from-gray-50 to-blue-50">
        <div class="max-w-6xl mx-auto py-10 px-6 text-center">
          <a href="/" class="text-lg font-bold text-gray-700 hover:text-blue-600 transition-colors">
            ‚Üê Back to all builds
          </a>
          <p class="text-sm text-gray-500 font-mono mt-4">
            Happy cooking! üçΩÔ∏è
          </p>
        </div>
      </footer>
    </div>
  </div>
</BaseLayout> 